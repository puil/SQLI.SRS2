<UserControl x:Class="SQLI.SRS2.Modules.Menu.Views.InspectorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:coreHelpers="clr-namespace:SQLI.SRS2.Core.Helpers;assembly=SQLI.SRS2.Core"
             xmlns:coreConverters="clr-namespace:SQLI.SRS2.Core.Converters;assembly=SQLI.SRS2.Core"
             xmlns:controls="clr-namespace:SQLI.SRS2.Modules.Menu.Controls"
             d:DesignHeight="800"
             mc:Ignorable="d"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <UserControl.Resources>
        <sys:Int32 x:Key="zeroIntegerValue">0</sys:Int32>
        
        <coreConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <coreConverters:CompareToBooleanConverter IsInverted="True" x:Key="NotCompareToBooleanConverter"/>

        <SolidColorBrush x:Key="InspectorBackgroundBrush" Color="#F2F2F2"/>
        <SolidColorBrush x:Key="SeparatorBackgroundBrush" Color="#E6E6E6"/>
        <SolidColorBrush x:Key="MouseOverItemBrush" Color="#FF0AB285" Opacity="0.5"/>
        <SolidColorBrush x:Key="MousePressedOnItemBrush" Color="#FF0AB285" Opacity="0.15"/>

        <DataTemplate x:Key="MoreButtonTemplate">
            <svgc:SvgViewbox Source="../Assets/chevron_down.svg"
                                 Width="16"
                                 Height="16"
                                 coreHelpers:SvgHelper.SvgBrush="DarkGray"/>
        </DataTemplate>

        <DataTemplate x:Key="ContextMenuItemTemplate">
            <StackPanel Orientation="Horizontal" Margin="10">
                <svgc:SvgViewbox Source="{Binding IconUri}"
                                 Width="10"
                                 Height="10"
                                 VerticalAlignment="Center"/>
                <TextBlock Margin="15,0,0,0" 
                           VerticalAlignment="Center"
                           Text="{Binding Description}"/>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="InspectorButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="46"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="BorderThickness" Value="1"/>
            <!--<Setter Property="Cursor" Value="Hand"/>-->
            <!--<Setter Property="HorizontalContentAlignment" Value="Left"/>-->
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="pressedBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{StaticResource TransparentBrush}"/>
                            <Border x:Name="hoverBorder"
                                    Background="{StaticResource MouseOverItemBrush}" 
                                    Visibility="Collapsed" />
                            <Border x:Name="pressedBorder"
                                    Background="{StaticResource MousePressedOnItemBrush}" 
                                    Opacity="0.5"
                                    Visibility="Collapsed" />
                            <ContentPresenter x:Name="contentPresenter" Opacity="{TemplateBinding Opacity}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="InspectorItemTemplate" DataType="{x:Type controls:InspectorItem}">
            <Button Style="{StaticResource InspectorButtonStyle}"
                    ToolTip="{Binding Description}"
                    Width="48">
                <svgc:SvgViewbox Source="{Binding IconUri}"
                                 Width="16"
                                 Height="16"
                                 coreHelpers:SvgHelper.SvgBrush="DarkGray"/>
            </Button>
        </DataTemplate>
    </UserControl.Resources>

    <controls:ResponsiveItemsControl Orientation="Vertical"
                                     Background="{StaticResource InspectorBackgroundBrush}"
                                     ItemsSource="{Binding Items}"
                                     ItemTemplate="{StaticResource InspectorItemTemplate}"
                                     MoreButtonStyle="{StaticResource InspectorButtonStyle}"
                                     MoreButtonContentTemplate="{StaticResource MoreButtonTemplate}"
                                     ContextMenuItemTemplate="{StaticResource ContextMenuItemTemplate}"
                                     Visibility="{Binding Items.Count, Converter={StaticResource NotCompareToBooleanConverter}, ConverterParameter={StaticResource zeroIntegerValue}}"/>
</UserControl>
