<UserControl x:Class="SQLI.SRS2.Modules.Menu.Views.MenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:controls="clr-namespace:SQLI.SRS2.Modules.Menu.Controls"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             xmlns:coreConverters="clr-namespace:SQLI.SRS2.Core.Converters;assembly=SQLI.SRS2.Core"
             xmlns:behaviors="clr-namespace:SQLI.SRS2.Modules.Menu.Behaviors"
             xmlns:ig="http://schemas.infragistics.com/xaml"
             xmlns:igPrimDT="http://schemas.infragistics.com/xaml/primitives"
             MaxWidth="600">

    <UserControl.Resources>
        <coreConverters:BooleanToVisibilityConverter True="Visible" False="Collapsed" x:Key="BoolToVisibleConverter"/>
        <coreConverters:BooleanToVisibilityConverter True="Collapsed" False="Visible" x:Key="NotBoolToVisibleConverter"/>
        <coreConverters:BooleanToVisibilityConverter True="Visible" False="Hidden" x:Key="BoolToVisibleHiddenConverter"/>
        <coreConverters:BooleanOrToVisibilityConverter HiddenVisibility="Hidden" x:Key="BooleanOrToHiddenVisibilityConverter"/>
        <coreConverters:NullToVisibilityConverter IsInverted="True" x:Key="NotNullToVisibilityConverter"/>
        <coreConverters:MathConverter Operation="Multiply" x:Key="MultiplyConverter"/>
        <igPrimDT:BoolToVisibilityConverter x:Key="BoolToVis" />

        <SolidColorBrush x:Key="MenuBackgroundBrush" Color="#F2F2F2"/>
        <SolidColorBrush x:Key="MenuExpansionButtonBackgroundBrush" Color="{StaticResource Color_008}" />
        <SolidColorBrush x:Key="TreeBackgroundBrush" Color="{StaticResource Color_016}"/>
        <SolidColorBrush x:Key="TreeBorderBrush" Color="{StaticResource Color_016}"/>
        <SolidColorBrush x:Key="SelectedItemBrush" Color="#FF0AB285"/>
        <SolidColorBrush x:Key="MouseOverItemBrush" Color="#FF0AB285" Opacity="0.5"/>
        <SolidColorBrush x:Key="MousePressedOnItemBrush" Color="#FF0AB285" Opacity="0.15"/>
        <!--<SolidColorBrush x:Key="MouseOverItemBrush" Color="{StaticResource Color_006}"/>-->

        <!-- TreeView Brushes -->
        <!--<LinearGradientBrush x:Key="TreeViewShadowSeparator" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="{DynamicResource Color_004}" Offset="0"/>
            <GradientStop Color="{DynamicResource Color_006}" Offset="1"/>
        </LinearGradientBrush>-->

        <!-- Same as default style from infragistics but changind width and heigh -->
        <Style x:Key="MenuScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Width" Value="10" />
            <Setter Property="MinWidth" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="thumb">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Grid.RowSpan="3" StrokeThickness="1" Fill="{StaticResource TransparentBrush}" Stroke="{StaticResource TransparentBrush}" Margin="0" />
                            <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="True" Style="{StaticResource ScrollBarButtonStyle}" HorizontalAlignment="Center" />
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="True" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="thumb" Style="{StaticResource VScrollBarThumbStyle}" HorizontalAlignment="Center" Width="30" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="repeatButton1" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="True" Grid.Row="2" Style="{StaticResource ScrollBarButtonStyle}" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollbarDisabledBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="MinHeight" Value="10" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition Width="0" />
                                    </Grid.ColumnDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0:0:0.3" />
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="repeatButton1">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle Grid.ColumnSpan="5" StrokeThickness="1" Fill="{StaticResource TransparentBrush}" Stroke="{StaticResource TransparentBrush}" />
                                    <RepeatButton x:Name="repeatButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="True" Style="{DynamicResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="-90" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="True">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButtonStyle}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource HScrollBarThumbStyle}" VerticalAlignment="Center" Height="30" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="repeatButton1" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="True" Style="{DynamicResource ScrollBarButtonStyle}" Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
                                        <RepeatButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform Angle="90" />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </RepeatButton.RenderTransform>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollbarDisabledBackgroundBrush}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Same as XamDataTree default style but using CustomNodesPanel instead -->
        <Style x:Key="MenuDataTreeStyle" TargetType="controls:MenuDataTree">
            <Setter Property="DefaultEditorStyle" Value="{StaticResource XamDataTreeDefaultEditorStyle}" />
            <Setter Property="Background" Value="{StaticResource TreeBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TreeBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:MenuDataTree">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <controls:CustomNodesPanel x:Name="NodesPanel" Background="{StaticResource TransparentBrush}"/>
                                <ScrollBar x:Name="VerticalScrollBar" Grid.Row="0" Grid.Column="1" Style="{StaticResource MenuScrollBarStyle}"/>
                                <Grid Grid.Row="2" Visibility="{TemplateBinding HorizontalScrollBarVisibility}">
                                    <ScrollBar x:Name="HorizontalScrollBar" Style="{StaticResource MenuScrollBarStyle}"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpansionIndicatorStyle1" TargetType="igPrimDT:ExpansionIndicator">
            <Setter Property="Background" Value="#FF666666"/>
            <Setter Property="BorderBrush" Value="#FF666666"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="igPrimDT:ExpansionIndicator">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">

                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="90"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF666666"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF666666"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">

                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="ExpansionIndicator" Background="#00000000" Grid.ColumnSpan="2" Grid.RowSpan="2" >
                                <Path Data="M5,3 L5,9 L9,6 z" Width="12" Height="12" x:Name="ExpansionIndicatorGlyph" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Margin="5,5,5,5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform />
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuExpansionIndicatorStyle" TargetType="igPrimDT:ExpansionIndicator">
            <Setter Property="Background" Value="#FF666666"/>
            <Setter Property="BorderBrush" Value="#FF666666"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="igPrimDT:ExpansionIndicator">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <!--<VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF6DBDD1"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>-->
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">

                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="90"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <!--<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF666666"/>
                                            </ColorAnimationUsingKeyFrames>-->
                                            <!--<ColorAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF666666"/>
                                            </ColorAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">

                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="ExpansionIndicator" Background="#00000000" Grid.ColumnSpan="2" Grid.RowSpan="2" >
                                <Image Source="{svgc:SvgImage Source=../Assets/chevron_right.svg}" Width="12" Height="12"
                                       x:Name="ExpansionIndicatorGlyph" 
                                       HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" 
                                       Margin="5,5,5,5" 
                                       RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform />
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                            <ContentPresenter Grid.Column="2" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FirstLevelNodeStyle" TargetType="ig:XamDataTreeNodeControl">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ig:XamDataTreeNodeControl">
                        <Grid Background="Transparent" HorizontalAlignment="Stretch">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="main" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <!--<VisualStateGroup x:Name="ActiveStates">
                                    <VisualState x:Name="Inactive"/>
                                    <VisualState x:Name="Active">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>-->
                                <!--<VisualStateGroup x:Name="SelectedStates">
                                    <VisualState x:Name="NotSelected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>-->
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="main" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="0" />
                                    <ColumnDefinition Width="0" />
                                    <ColumnDefinition Width="0"/>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <igPrimDT:NodeLineControl Node="{Binding Node}" x:Name="lineControl" />
                                <igPrimDT:NodeLineTerminator Grid.Column="1" x:Name="LineTerminator" Node="{Binding Node, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Visibility="Collapsed"/>
                                <igPrimDT:ExpansionIndicator x:Name="ExpansionIndicator" IsTabStop="False" Grid.Column="1" 
                                                             Visibility="Collapsed" 
                                                             IsExpanded="{Binding Node.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             Style="{StaticResource ExpansionIndicatorStyle1}" />
                                <CheckBox x:Name="Checkbox" 
                                          Grid.Column="2" 
                                          IsThreeState="{Binding Node.NodeLayout.CheckBoxSettings.IsCheckBoxThreeStateResolved}"
                                          IsTabStop="False"
                                          Visibility="Collapsed" 
                                          IsChecked="{Binding Node.IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							              VerticalAlignment="Center" HorizontalAlignment="Center"></CheckBox>

                                <Border x:Name="SelectedBorder" 
                                        Grid.Column="4"
                                        Width="6"
                                        Background="{StaticResource SelectedItemBrush}">
                                    <Border.Visibility>
                                        <MultiBinding Converter="{StaticResource BooleanOrToHiddenVisibilityConverter}">
                                            <Binding Path="Node.IsSelected"/>
                                            <Binding Path="Node.IsExpanded"/>
                                        </MultiBinding>
                                    </Border.Visibility>
                                </Border>

                                <Border x:Name="Bd" Grid.Column="6" 
                                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>

                                <Border x:Name="hoverBorder" Grid.Column="0" Grid.ColumnSpan="6"
                                        Background="{StaticResource MouseOverItemBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Visibility="Collapsed" 
                                        CornerRadius="1"></Border>

                                <ContentControl x:Name="ExpandedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />
                                <ContentControl x:Name="CollapsedIcon" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed" Grid.Column="4" IsTabStop="False" />

                                <igPrimDT:ActiveNodeIndicator x:Name="ActiveBorder" Grid.Column="6" Visibility="Collapsed" IsTabStop="false"  />

                                <ContentPresenter x:Name="ContentPresenter" Grid.Column="6" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RestLevelsNodeStyle" TargetType="ig:XamDataTreeNodeControl">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ig:XamDataTreeNodeControl">
                        <Grid Background="Transparent"
                              Visibility="{Binding IsMenuDataTreeExpanded, RelativeSource={RelativeSource AncestorType=controls:MenuDataTree}, Converter={StaticResource BoolToVisibleConverter}}">
                            <Grid x:Name="main">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="FirstLevelIsExpandedBorder" 
                                        Grid.Column="0"
                                        Width="6"
                                        Margin="0,0,0,0"
                                        Background="{StaticResource SelectedItemBrush}"/>

                                <Border x:Name="hoverBorder" 
                                        Grid.Column="0"
                                        Grid.ColumnSpan="4"
                                        Background="{StaticResource MouseOverItemBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Visibility="Collapsed" 
                                        CornerRadius="1"/>

                                <igPrimDT:NodeLineControl Grid.Column="1" Node="{Binding Node}" x:Name="lineControl" 
                                                          Width="{Binding Node.Data.Level, Converter={StaticResource MultiplyConverter}, ConverterParameter=15}"/>

                                <igPrimDT:ExpansionIndicator x:Name="ExpansionIndicator" 
                                                             IsTabStop="False" Grid.Column="2" 
                                                             Visibility="{Binding Node.HasChildren, Converter={StaticResource BoolToVis}, RelativeSource={RelativeSource TemplatedParent}}"
                                                             IsExpanded="{Binding Node.IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                             Style="{StaticResource MenuExpansionIndicatorStyle}" />

                                <ContentPresenter x:Name="ContentPresenter" 
                                                  Grid.Column="3" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="hoverBorder" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <Storyboard x:Key="ExpandMenuStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="250" Duration="0:0:0.25" />
        </Storyboard>

        <Storyboard x:Key="CollapseMenuStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="50" Duration="0:0:0.25" />
        </Storyboard>

        <Style x:Key="ExpandableGridStyle" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMenuExpanded}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource CollapseMenuStoryboard}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsMenuExpanded}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ExpandMenuStoryboard}" />
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource CollapseMenuStoryboard}" />
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandMenuButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="BorderThickness" Value="1"/>
            <!--<Setter Property="Cursor" Value="Hand"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="pressedBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{StaticResource TransparentBrush}"/>
                            <Border x:Name="hoverBorder"
                                    Background="{StaticResource MouseOverItemBrush}" 
                                    Visibility="Collapsed" />
                            <Border x:Name="pressedBorder"
                                    Background="{StaticResource MousePressedOnItemBrush}" 
                                    Opacity="0.5"
                                    Visibility="Collapsed" />
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="46"/>
            <Setter Property="MinWidth" Value="30"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="BorderThickness" Value="1"/>
            <!--<Setter Property="Cursor" Value="Hand"/>-->
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Opacity" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="pressedBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{StaticResource TransparentBrush}"/>
                            <Border x:Name="hoverBorder"
                                    Background="{StaticResource MouseOverItemBrush}" 
                                    Visibility="Collapsed" />
                            <Border x:Name="pressedBorder"
                                    Background="{StaticResource MousePressedOnItemBrush}" 
                                    Opacity="0.5"
                                    Visibility="Collapsed" />
                            <ContentPresenter x:Name="contentPresenter" Opacity="{TemplateBinding Opacity}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CollapsedMenuItemTemplate">
            <Button Style="{StaticResource ExpandMenuButtonStyle}"
                    ToolTip="{Binding Description}"
                    Width="48"
                    Height="46">
                <svgc:SvgViewbox Source="{Binding IconUri}"
                                 Width="16"
                                 Height="16"/>
            </Button>
        </DataTemplate>

        <DataTemplate x:Key="MoreButtonTemplate">
            <svgc:SvgViewbox Source="../Assets/chevron_down.svg"
                             Width="16"
                             Height="16"/>
        </DataTemplate>

        <DataTemplate x:Key="ContextMenuItemTemplate">
            <StackPanel Orientation="Horizontal" Margin="10">
                <svgc:SvgViewbox Source="{Binding IconUri}"
                                 Width="10"
                                 Height="10"
                                 VerticalAlignment="Center"/>
                <TextBlock Margin="15,0,0,0" 
                           VerticalAlignment="Center"
                           Text="{Binding Description}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Background="{StaticResource MenuBackgroundBrush}" 
          Width="250"
          Style="{StaticResource ExpandableGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Expand/Collapse Menu tree button -->
        <Button Grid.Row="0" 
                Height="46" 
                HorizontalContentAlignment="Left" 
                HorizontalAlignment="Stretch" 
                Style="{StaticResource ExpandMenuButtonStyle}"
                Command="{Binding ExpandCollapseMenuCommand}">
            <Image Source="{svgc:SvgImage ../Assets/Menu.svg}" 
                   Width="24"
                   Margin="12,0,0,0"/>
        </Button>

        <!-- Menu Data Tree (Visible if menu is expanded) -->
        <controls:MenuDataTree Grid.Row="1"
                               BorderThickness="0"
                               Background="Transparent"
                               ItemsSource="{Binding MenuItems}"
                               Style="{StaticResource MenuDataTreeStyle}"
                               IsMenuDataTreeExpanded="{Binding IsMenuExpanded}"
                               HorizontalScrollBarVisibility="{Binding IsMenuExpanded, Converter={StaticResource BoolToVisibleConverter}}"
                               VirtualizingPanel.IsVirtualizing="True"
                               VirtualizingPanel.VirtualizationMode="Recycling"
                               NodeLineVisibility="Collapsed"
                               ActiveDataItem="{Binding ActiveDataItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <!-- Visibility="{Binding IsMenuExpanded, Converter={StaticResource BoolToVisibleConverter}}" -->
            <i:Interaction.Behaviors>
                <behaviors:DataTreeOneFirstLevelItemExpandedBehavior/>
                <behaviors:DataTreeMouseDoubleClickBehavior/>
            </i:Interaction.Behaviors>

            <ig:XamDataTree.GlobalNodeLayouts>
                <ig:NodeLayout Key="FirstLevel"
                               TargetTypeName="MenuItem"
                               IsSelectedMemberPath="IsSelected"
                               IsExpandedMemberPath="IsExpanded"
                               NodeStyle="{StaticResource FirstLevelNodeStyle}">
                    <ig:NodeLayout.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                    ToolTip="{Binding Data.Description}">
                                <Grid Height="48">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Icon -->
                                    <svgc:SvgCanvas Grid.Column="0" 
                                                Margin="10,0,10,0"
                                                Source="{Binding Data.IconUri}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Width="32"/>

                                    <!-- Description -->
                                    <TextBlock Grid.Column="1" 
                                               Margin="0,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="{Binding Data.Description}"
                                               FontFamily="Segoe UI, Lucida Sans Unicode, Verdana"
                                               FontSize="15"
                                               Visibility="{Binding IsMenuDataTreeExpanded, RelativeSource={RelativeSource AncestorType=controls:MenuDataTree}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ig:NodeLayout.ItemTemplate>
                </ig:NodeLayout>
                <ig:NodeLayout Key="RestLevels"
                               TargetTypeName="ChildMenuItem"
                               IsSelectedMemberPath="IsSelected"
                               IsExpandedMemberPath="IsExpanded"
                               NodeStyle="{StaticResource RestLevelsNodeStyle}">
                    <ig:NodeLayout.ItemTemplate>
                        <DataTemplate>
                            <Border Background="Transparent"
                                    ToolTip="{Binding Data.Description}">
                                <Grid Height="34">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Icon -->
                                    <svgc:SvgViewbox Grid.Column="0" 
                                                     Margin="0,0,10,0"
                                                     Source="{Binding Data.IconUri}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"
                                                     Width="20"
                                                     Visibility="{Binding Data.IconUri, Converter={StaticResource NotNullToVisibilityConverter}}"/>

                                    <!-- Description -->
                                    <TextBlock x:Name="txtDescription" 
                                               Grid.Column="1"
                                               Margin="0,0,10,0"
                                               Text="{Binding Data.Description, UpdateSourceTrigger=PropertyChanged}"
                                               VerticalAlignment="Center"
                                               FontFamily="Segoe UI, Lucida Sans Unicode, Verdana"
                                               FontSize="14"/>
                                </Grid>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Data.IsSelected}" Value="True">
                                    <Setter TargetName="txtDescription" Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ig:NodeLayout.ItemTemplate>
                </ig:NodeLayout>
            </ig:XamDataTree.GlobalNodeLayouts>
        </controls:MenuDataTree>

        <!-- Responsive Items Control (Visible if menu is collapsed) -->
        <controls:ResponsiveItemsControl Grid.Row="1"
                                         Orientation="Vertical"
                                         Background="Transparent"
                                         ItemsSource="{Binding MenuItems}"
                                         ItemTemplate="{StaticResource CollapsedMenuItemTemplate}"
                                         MoreButtonStyle="{StaticResource MenuButtonStyle}"
                                         MoreButtonContentTemplate="{StaticResource MoreButtonTemplate}"
                                         ContextMenuItemTemplate="{StaticResource ContextMenuItemTemplate}"
                                         HorizontalAlignment="Left"
                                         Visibility="Collapsed"/>

        <!-- Visibility="{Binding IsMenuExpanded, Converter={StaticResource NotBoolToVisibleConverter}}"/> -->

        <Separator Grid.Row="2" Height="2" Background="#E6E6E6"/>

        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" 
                    Style="{StaticResource MenuButtonStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Icon -->
                    <svgc:SvgCanvas Grid.Column="0" 
                                    Margin="10,0,10,0"
                                    Source="../Assets/User.svg"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="32"/>

                    <!-- Description -->
                    <TextBlock Grid.Column="1" 
                               Margin="0,0,0,0"
                               VerticalAlignment="Center"
                               Text="CSTLEIVAD (Admin)"
                               FontFamily="Segoe UI Regular"
                               FontSize="15"/>
                </Grid>
            </Button>

            <Button Grid.Row="1" 
                    Style="{StaticResource MenuButtonStyle}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Icon -->
                    <svgc:SvgCanvas Grid.Column="0" 
                                    Margin="10,0,10,0"
                                    Source="../Assets/Configuration.svg"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="32"/>

                    <!-- Description -->
                    <TextBlock Grid.Column="1" 
                               Margin="0,0,0,0"
                               VerticalAlignment="Center"
                               Text="Settings"
                               FontFamily="Segoe UI Regular"
                               FontSize="15"/>
                </Grid>
            </Button>
        </Grid>
    </Grid>

</UserControl>
