<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:SQLI.SRS2.Modules.Menu.Controls"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:coreBehaviors="clr-namespace:SQLI.SRS2.Core.Behaviors;assembly=SQLI.SRS2.Core">

    <SolidColorBrush x:Key="MouseOverItemBrush" Color="#FF0AB285" Opacity="0.5"/>
    <SolidColorBrush x:Key="MousePressedOnItemBrush" Color="#FF0AB285" Opacity="0.15"/>

    <Style x:Key="ContextMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Command" 
                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}},
                                Path=DataContext.ItemCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid SnapsToDevicePixels="True">
                        <Rectangle x:Name="Bg"
                                   Fill="{TemplateBinding Background}"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="1" />

                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MouseOverItemBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MousePressedOnItemBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="Cursor" Value="Hand"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="pressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="Transparent"/>
                        <Border x:Name="hoverBorder"
                                Background="{StaticResource MouseOverItemBrush}" 
                                Visibility="Collapsed" />
                        <Border x:Name="pressedBorder"
                                Background="{StaticResource MousePressedOnItemBrush}" 
                                Opacity="0.5"
                                Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter" 
                                          Opacity="{TemplateBinding Opacity}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ResponsiveButtonsControlTemplate" TargetType="controls:ResponsiveButtonsControl">
        <Grid>
            <Border x:Name="Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"/>

            <StackPanel Orientation="{TemplateBinding Orientation}">
                <controls:CustomItemsControl x:Name="PART_ItemsControl"
                                             ItemTemplate="{TemplateBinding VisibleItemTemplate}">
                    <controls:CustomItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ContentControl">
                                        <Button x:Name="PART_VisibleButton" 
                                                Style="{StaticResource FlatButtonStyle}"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}},
                                                                  Path=DataContext.ItemCommand}"
                                                CommandParameter="{Binding}"
                                                BorderThickness="0"
                                                HorizontalAlignment="Left"
                                                HorizontalContentAlignment="Left"
                                                VerticalContentAlignment="Stretch">
                                            <ContentPresenter x:Name="contentPresenter" />
                                        </Button>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </controls:CustomItemsControl.ItemContainerStyle>
                </controls:CustomItemsControl>

                <Button x:Name="PART_MoreButton"
                        Style="{TemplateBinding MoreButtonStyle}"
                        HorizontalAlignment="Stretch"
                        ToolTip="{TemplateBinding MoreButtonToolTip}"
                        ContentTemplate="{TemplateBinding MoreButtonContentTemplate}">
                    <i:Interaction.Behaviors>
                        <coreBehaviors:DropDownButtonBehavior/>
                    </i:Interaction.Behaviors>
                    <Button.ContextMenu>
                        <ContextMenu x:Name="PART_ContextMenu" 
                                     ItemTemplate="{TemplateBinding HiddenItemTemplate}"
                                     ItemContainerStyle="{StaticResource ContextMenuItemStyle}"
                                     Placement="Left">
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ResponsiveButtonsControlStyle" TargetType="controls:ResponsiveButtonsControl">
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="Template" Value="{StaticResource ResponsiveButtonsControlTemplate}"/>
    </Style>

    <!-- Implicit Styles-->
    <Style TargetType="controls:ResponsiveButtonsControl" BasedOn="{StaticResource ResponsiveButtonsControlStyle}" />
</ResourceDictionary>