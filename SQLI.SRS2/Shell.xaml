<Window x:Class="SQLI.SRS2.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:core="clr-namespace:SQLI.SRS2.Core;assembly=SQLI.SRS2.Core"
        xmlns:coreConverters="clr-namespace:SQLI.SRS2.Core.Converters;assembly=SQLI.SRS2.Core"
        xmlns:coreHelpers="clr-namespace:SQLI.SRS2.Core.Helpers;assembly=SQLI.SRS2.Core"
        xmlns:res="clr-namespace:SQLI.SRS2.Resources"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        Width="1142" Height="708"
        MinHeight="200" MinWidth="700"
        BorderBrush="#FF333333" 
        BorderThickness="1"   
        WindowStartupLocation="CenterScreen"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        Background="Transparent"
        Icon="Assets/JTILogo.ico">


    <Window.Resources>
        <!--<res:ResourceStrings x:Key="Strings"/>-->

        <coreConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible" False="Collapsed" />
        <coreConverters:BooleanToVisibilityConverter x:Key="NotBooleanToVisibilityConverter" True="Collapsed" False="Visible" />

        <!-- Window Brushes -->
        <!--<SolidColorBrush x:Key="WindowBackgroundBrush" Color="{DynamicResource Color_009}" />-->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#f7f7f7" />
        <SolidColorBrush x:Key="WindowTitleBarIconsBrush" Color="{DynamicResource Color_002}" />
        <!--<SolidColorBrush x:Key="WindowTitleBarBackgroundBrush" Color="{DynamicResource Color_024}" />-->
        <SolidColorBrush x:Key="WindowTitleBarEnvironmentConnectedBackgroundBrush" Color="#FF0AB285" />
        <SolidColorBrush x:Key="WindowTitleBarEnvironmentDisconnectedBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="WindowTitleForegroundBrush" Color="{DynamicResource Color_006}" />
        <SolidColorBrush x:Key="MouseOverDialogButtonBrush" Color="LightGray" Opacity="0.5"/>
        <SolidColorBrush x:Key="MouseOverCloseButtonBrush" Color="Red" Opacity="0.9"/>

        <!-- Styles -->
        <Style x:Key="DialogButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="MinWidth" Value="45"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="{StaticResource MouseOverDialogButtonBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                            
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                            
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" From="1" To="0.7" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused"/>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle Fill="{StaticResource TransparentBrush}"/>
                            <Border x:Name="hoverBorder" 
                                    Background="{TemplateBinding Background}" 
                                    Visibility="Collapsed"/>
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.7" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Resize Rectangles Style -->
        <Style x:Key="RectBorderStyle" TargetType="Rectangle">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
            <EventSetter Event="MouseLeftButtonDown" Handler="Resize_Init"/>
            <EventSetter Event="MouseLeftButtonUp" Handler="Resize_End"/>
            <EventSetter Event="MouseMove" Handler="Resizeing_Form"/>
        </Style>

        <Style x:Key="TitleBarGridStyle" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEnvironmentConnected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                    <Setter Property="Background" Value="{StaticResource WindowTitleBarEnvironmentDisconnectedBackgroundBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnvironmentConnected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Background" Value="{StaticResource WindowTitleBarEnvironmentConnectedBackgroundBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <!--<Border Margin="10" BorderThickness="1" BorderBrush="Black">
        <Border.Effect>
            <DropShadowEffect Color="Gray"
                              Opacity="0.5"
                              Direction="0"
                              RenderingBias="Quality"
                              BlurRadius="15"
                              ShadowDepth="1" />
        </Border.Effect>-->

    <Grid Background="{StaticResource WindowBackgroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Visibility="Visible">

        <DockPanel>

            <!-- Title bar -->
            <Grid DockPanel.Dock="Top" Height="32" Style="{StaticResource TitleBarGridStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Source="{svgc:SvgImage Source=../Assets/JTILogo.svg}"
                       Stretch="Fill" 
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Left" 
                       Width="15" 
                       Height="11" 
                       Margin="5,0,0,0"/>

                <TextBlock Grid.Column="1" 
                           Text="{x:Static res:ResourceStrings.Window_Main_Title}" 
                           Foreground="{DynamicResource LightForegroundBrush}" 
                           VerticalAlignment="Center" 
                           Margin="8,0,8,0" 
                           FontFamily="Segoe UI Regular"
                           LineHeight="14"
                           FontSize="12"/>

                <Rectangle Grid.ColumnSpan="4" 
                           Fill="Transparent" 
                           MouseDown="TitleBarMouseDown"/>
                
                <!-- Environment connection state -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Stretch">

                    <svgc:SvgViewbox Source="../Assets/Connection ON.svg"
                                     Width="15"
                                     Height="15"
                                     coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"
                                     Visibility="{Binding IsEnvironmentConnected, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <svgc:SvgViewbox Source="../Assets/Connection OFF.svg"
                                     Width="15"
                                     Height="15"
                                     coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"
                                     Visibility="{Binding IsEnvironmentConnected, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NotBooleanToVisibilityConverter}}"/>

                    <TextBlock Margin="9,0,0,0"
                               Text="{Binding EnvironmentName}"
                               FontFamily="Segoe UI Regular"
                               Foreground="{StaticResource WindowTitleForegroundBrush}"
                               FontSize="8"
                               VerticalAlignment="Center"/>
                </StackPanel>

                <!-- Window buttons (Minimize, maximize and close) -->
                <Grid Grid.Column="3" HorizontalAlignment="Right" Margin="22,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!-- Minimize button -->
                    <Button Style="{StaticResource DialogButtonStyle}"
                            Command="{Binding MinimizeCommand}">
                        
                        <svgc:SvgViewbox Source="../Assets/Minimize.svg"
                                         Width="12"
                                         Height="12"
                                         coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"
                                         VerticalAlignment="Bottom"/>
                    </Button>

                    <!-- Maximize/Restore button -->
                    <Button Grid.Column="1"
                            Style="{StaticResource DialogButtonStyle}"
                            Command="{Binding MaximizeCommand}">
                        <Grid>
                            <svgc:SvgViewbox Source="../Assets/Maximize.svg"
                                             Width="12"
                                             Height="12"
                                             coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"
                                             Visibility="{Binding IsMaximized, Converter={StaticResource NotBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>

                            <svgc:SvgViewbox Source="../Assets/Restore.svg"
                                             Width="12"
                                             Height="12"
                                             coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"
                                             Visibility="{Binding IsMaximized, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Button>

                    <!-- Close button -->
                    <Button Grid.Column="2"
                            Style="{StaticResource DialogButtonStyle}"
                            Command="{Binding CloseCommand}"
                            Background="{StaticResource MouseOverCloseButtonBrush}">

                        <svgc:SvgViewbox Source="../Assets/Close.svg"
                                         Width="12"
                                         Height="12"
                                         coreHelpers:SvgHelper.SvgBrush="{StaticResource WindowTitleForegroundBrush}"/>
                    </Button>
                </Grid>
            </Grid>

            <!-- Menu -->
            <ContentControl DockPanel.Dock="Left" 
                            prism:RegionManager.RegionName="{x:Static core:RegionNames.MenuRegion}" />

            <!-- Content with inspector -->
            <Border Margin="16,16,16,0" Background="White">
                <Border.Effect>
                    <DropShadowEffect Direction="-90" ShadowDepth="3" BlurRadius="14" Opacity="0.5" RenderingBias="Quality"/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Vertical">
                        <Button Margin="20" Width="200" HorizontalAlignment="Center"
                                Command="{Binding ChangeEnvironmentConnectionCommand}" Content="Change environment"/>
                        <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}"/>
                    </StackPanel>
                    <ContentControl Grid.Column="1" prism:RegionManager.RegionName="{x:Static core:RegionNames.InspectorRegion}"
                                    Background="LightBlue"/>
                </Grid>
            </Border>

        </DockPanel>

        <!--Resize Handlers-->
        <Rectangle x:Name="leftSizeGrip"
                        Width="2"
                        HorizontalAlignment="Left"
                        Cursor="SizeWE"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle x:Name="rightSizeGrip"
                        Width="2"
                        HorizontalAlignment="Right"
                        Cursor="SizeWE"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle x:Name="topSizeGrip"
                        Height="2"
                        VerticalAlignment="Top"
                        Cursor="SizeNS"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle x:Name="bottomSizeGrip"
                        Height="2"
                        VerticalAlignment="Bottom"
                        Cursor="SizeNS"
                        Style="{StaticResource RectBorderStyle}" />
        <!--  Corners  -->
        <Rectangle Name="topLeftSizeGrip"
                        Width="2"
                        Height="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Cursor="SizeNWSE"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="bottomRightSizeGrip"
                        Width="2"
                        Height="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Cursor="SizeNWSE"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="topRightSizeGrip"
                        Width="2"
                        Height="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Cursor="SizeNESW"
                        Style="{StaticResource RectBorderStyle}" />
        <Rectangle Name="bottomLeftSizeGrip"
                        Width="2"
                        Height="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Cursor="SizeNESW"
                        Style="{StaticResource RectBorderStyle}" />
    </Grid>
</Window>
